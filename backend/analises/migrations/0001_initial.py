# Generated by Django 5.2.6 on 2025-09-09 01:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('motos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnaliseTecnica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('visual', 'Visual'), ('diagnostico', 'Diagnóstico'), ('desempenho', 'Desempenho'), ('seguranca', 'Segurança'), ('completa', 'Completa')], default='completa', max_length=20, verbose_name='Tipo de Análise')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='pendente', max_length=20, verbose_name='Status')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('dados_analise', models.JSONField(blank=True, null=True, verbose_name='Dados da Análise')),
                ('resumo', models.TextField(blank=True, null=True, verbose_name='Resumo')),
                ('recomendacoes', models.TextField(blank=True, null=True, verbose_name='Recomendações')),
                ('pontuacao_geral', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Pontuação Geral')),
                ('data_solicitacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Solicitação')),
                ('data_inicio', models.DateTimeField(blank=True, null=True, verbose_name='Data de Início')),
                ('data_conclusao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Conclusão')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('moto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analises_tecnicas', to='motos.moto')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analises_responsavel', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Análise Técnica',
                'verbose_name_plural': 'Análises Técnicas',
                'ordering': ['-data_solicitacao'],
            },
        ),
        migrations.CreateModel(
            name='AnaliseVisual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem_original', models.ImageField(upload_to='analises/imagens/', verbose_name='Imagem Original')),
                ('formato_imagem', models.CharField(blank=True, max_length=10, null=True, verbose_name='Formato')),
                ('dimensoes', models.JSONField(blank=True, null=True, verbose_name='Dimensões')),
                ('tamanho_bytes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tamanho (bytes)')),
                ('cores_principais', models.JSONField(blank=True, null=True, verbose_name='Cores Principais')),
                ('paleta_cores', models.JSONField(blank=True, null=True, verbose_name='Paleta de Cores')),
                ('tipo_imagem', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tipo de Imagem')),
                ('qualidade_imagem', models.CharField(blank=True, choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta')], max_length=20, null=True, verbose_name='Qualidade')),
                ('nivel_brilho', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Nível de Brilho')),
                ('nivel_contraste', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Nível de Contraste')),
                ('objetos_detectados', models.JSONField(blank=True, null=True, verbose_name='Objetos Detectados')),
                ('resumo_analise', models.TextField(blank=True, null=True, verbose_name='Resumo da Análise')),
                ('observacoes_tecnicas', models.TextField(blank=True, null=True, verbose_name='Observações Técnicas')),
                ('analisada_em', models.DateTimeField(auto_now_add=True, verbose_name='Analisada em')),
                ('analise', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analise_visual', to='analises.analisetecnica')),
            ],
            options={
                'verbose_name': 'Análise Visual',
                'verbose_name_plural': 'Análises Visuais',
                'ordering': ['-analisada_em'],
            },
        ),
        migrations.CreateModel(
            name='Diagnostico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('informacao', 'Informação'), ('aviso', 'Aviso'), ('alerta', 'Alerta'), ('critico', 'Crítico')], default='informacao', max_length=20, verbose_name='Tipo')),
                ('sistema', models.CharField(max_length=100, verbose_name='Sistema/Componente')),
                ('componente', models.CharField(blank=True, max_length=100, null=True, verbose_name='Componente Específico')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('causa_provavel', models.TextField(blank=True, null=True, verbose_name='Causa Provável')),
                ('severidade', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Severidade (1-5)')),
                ('urgencia', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('critica', 'Crítica')], default='baixa', max_length=20, verbose_name='Urgência')),
                ('status', models.CharField(choices=[('identificado', 'Identificado'), ('em_analise', 'Em Análise'), ('resolvido', 'Resolvido'), ('monitorando', 'Monitorando')], default='identificado', max_length=20, verbose_name='Status')),
                ('solucao_recomendada', models.TextField(blank=True, null=True, verbose_name='Solução Recomendada')),
                ('custo_estimado', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Custo Estimado (R$)')),
                ('prazo_dias', models.PositiveIntegerField(blank=True, null=True, verbose_name='Prazo para Resolução (dias)')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('identificado_em', models.DateTimeField(auto_now_add=True, verbose_name='Identificado em')),
                ('resolvido_em', models.DateTimeField(blank=True, null=True, verbose_name='Resolvido em')),
                ('analise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosticos', to='analises.analisetecnica')),
            ],
            options={
                'verbose_name': 'Diagnóstico',
                'verbose_name_plural': 'Diagnósticos',
                'ordering': ['-severidade', '-identificado_em'],
            },
        ),
        migrations.CreateModel(
            name='Recomendacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('manutencao', 'Manutenção'), ('melhoria', 'Melhoria'), ('seguranca', 'Segurança'), ('desempenho', 'Desempenho'), ('economia', 'Economia')], default='manutencao', max_length=20, verbose_name='Tipo')),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=20, verbose_name='Prioridade')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('justificativa', models.TextField(blank=True, null=True, verbose_name='Justificativa')),
                ('acoes_recomendadas', models.TextField(verbose_name='Ações Recomendadas')),
                ('prazo_implementacao', models.PositiveIntegerField(blank=True, null=True, verbose_name='Prazo de Implementação (dias)')),
                ('custo_estimado', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Custo Estimado (R$)')),
                ('beneficio_esperado', models.TextField(blank=True, null=True, verbose_name='Benefício Esperado')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_implementacao', 'Em Implementação'), ('implementada', 'Implementada'), ('cancelada', 'Cancelada')], default='pendente', max_length=20, verbose_name='Status')),
                ('criada_em', models.DateTimeField(auto_now_add=True, verbose_name='Criada em')),
                ('implementada_em', models.DateTimeField(blank=True, null=True, verbose_name='Implementada em')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('analise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recomendacoes_geradas', to='analises.analisetecnica')),
            ],
            options={
                'verbose_name': 'Recomendação',
                'verbose_name_plural': 'Recomendações',
                'ordering': ['-prioridade', '-criada_em'],
            },
        ),
    ]
